{"ast":null,"code":"var _jsxFileName = \"/Users/bchi000/Downloads/prabhu_example/favorite_button/src/contribution_widget/contributions/ContributionsWidget.js\";\n/*global WASABI*/\nimport React from 'react';\nimport { appendScript } from '../utils/appendScript';\nimport { removeScript } from '../utils/removeScript';\nimport './CharityWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst logo = 'charity-logos.png';\nconst logoWidth = '549px';\nconst logoHeight = '145px';\nclass ContributionsWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.shouldDisplay = () => {\n      // Set up properties that will be the same on all Wasabi calls.\n      WASABI.setOptions({\n        'applicationName': 'contributions',\n        'experimentName': 'charity_contributions_1',\n        'protocol': 'https',\n        'host': 'experimentation.bhn.technology:443'\n      });\n\n      // Check Wasabi to see if this user should be in the test and which bucket.\n      WASABI.getAssignment({\n        'userID': this.state.userid\n      }).then(response => {\n        console.log('getAssignment: success');\n        console.log(JSON.stringify(response));\n        // This object will include the assignment made and the status, which might tell you the experiment\n        // has not been started, etc.\n        // Note that if the experiment doesn't exist or hasn't been started, response.assignment is undefined, which is OK.\n        if (response.assignment === 'control') {\n          this.setState({\n            ctbt_state: 'block'\n          });\n          console.log(\"control group\");\n        } else if (response.assignment === 'test') {\n          this.setState({\n            ctbt_state: 'block'\n          });\n          console.log(\"test group\");\n          WASABI.postImpression({\n            'userID': this.state.userid\n          }).then(function (response) {\n            console.log('postImpression: success');\n            if (response) {\n              console.log(JSON.stringify(response));\n            }\n          }, function (error) {\n            console.log('postImpression: error');\n            console.dir(error);\n          });\n        } else {\n          this.setState({\n            ctbt_state: 'none'\n          });\n          console.log(\"no assignment\");\n        }\n        // else the user got the Control bucket, and we don't do anything.\n      }, error => {\n        console.log('getAssignment: error');\n        console.dir(error);\n        this.setState({\n          ctbt_state: 'none'\n        });\n      });\n    };\n    this.handleCheckboxChange = () => {\n      WASABI.postAction('ClickedOnContribute', null /* No extra action info */, {\n        'userID': this.state.userid\n      }).then(function (response) {\n        console.log('postAction: success');\n        if (response) {\n          console.log(JSON.stringify(response));\n        }\n      }, function (error) {\n        console.log('postAction: error');\n        console.dir(error);\n      });\n      this.setState(prevState => ({\n        isChecked: !prevState.isChecked\n      }));\n    };\n    this.state = {\n      isChecked: false,\n      ctbt_state: 'none',\n      userid: ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16))\n    };\n  }\n  componentDidMount() {\n    appendScript(\"jq\", \"https://code.jquery.com/jquery-1.12.3.min.js\");\n    document.getElementById(\"jq\").addEventListener('load', () => {\n      appendScript(\"ws\", \"https://experimentation.bhn.technology/scripts/wasabi.js\");\n      document.getElementById(\"ws\").addEventListener('load', () => {\n        // DTM is loaded\n        this.shouldDisplay();\n      });\n    });\n  }\n  componentDidUnmount() {\n    removeScript(\"https://code.jquery.com/jquery-1.12.3.min.js\");\n    removeScript(\"https://experimentation.bhn.technology/scripts/wasabi.js\");\n  }\n  render() {\n    const {\n      isChecked\n    } = this.state;\n    const {\n      label\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ctbt\",\n        style: {\n          display: `${this.state.ctbt_state}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-message-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/Icon.png\",\n              alt: \"Icon\",\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message\",\n              children: \"Thank you for your purchase. Your patronage helps us donate up to $1 to one of these charities.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"charity-logos-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `charity-logo-container charity-logo-container`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/charitylogos/charity-logos.png`,\n                alt: `Charity Logo`,\n                className: \"charity-logo\",\n                style: {\n                  width: logoWidth,\n                  height: logoHeight\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ContributionsWidget;","map":{"version":3,"names":["React","appendScript","removeScript","jsxDEV","_jsxDEV","logo","logoWidth","logoHeight","ContributionsWidget","Component","constructor","props","shouldDisplay","WASABI","setOptions","getAssignment","state","userid","then","response","console","log","JSON","stringify","assignment","setState","ctbt_state","postImpression","error","dir","handleCheckboxChange","postAction","prevState","isChecked","replace","c","crypto","getRandomValues","Uint8Array","toString","componentDidMount","document","getElementById","addEventListener","componentDidUnmount","render","label","children","id","style","display","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","width","height"],"sources":["/Users/bchi000/Downloads/prabhu_example/favorite_button/src/contribution_widget/contributions/ContributionsWidget.js"],"sourcesContent":["/*global WASABI*/\r\nimport React from 'react';\r\nimport {appendScript} from '../utils/appendScript'\r\nimport { removeScript } from '../utils/removeScript'\r\nimport './CharityWidget.css';\r\n\r\nconst logo = 'charity-logos.png';\r\nconst logoWidth = '549px';\r\nconst logoHeight = '145px';\r\n\r\n\r\nclass ContributionsWidget extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isChecked: false,\r\n      ctbt_state: 'none',\r\n      userid: ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n      )\r\n    };\r\n  }\r\n  componentDidMount () {\r\n    appendScript(\"jq\",\"https://code.jquery.com/jquery-1.12.3.min.js\");\r\n    document.getElementById(\"jq\").addEventListener('load', () => {\r\n      appendScript(\"ws\", \"https://experimentation.bhn.technology/scripts/wasabi.js\");\r\n      document.getElementById(\"ws\").addEventListener('load', () => {\r\n        // DTM is loaded\r\n        this.shouldDisplay();\r\n      });\r\n    });\r\n    \r\n  }\r\n  componentDidUnmount () {\r\n    removeScript(\"https://code.jquery.com/jquery-1.12.3.min.js\");\r\n    removeScript(\"https://experimentation.bhn.technology/scripts/wasabi.js\");\r\n  }\r\n\r\n  shouldDisplay = () => {\r\n    // Set up properties that will be the same on all Wasabi calls.\r\n    WASABI.setOptions({\r\n      'applicationName': 'contributions',\r\n      'experimentName': 'charity_contributions_1',\r\n      'protocol': 'https',\r\n      'host': 'experimentation.bhn.technology:443'\r\n    });\r\n\r\n    // Check Wasabi to see if this user should be in the test and which bucket.\r\n    WASABI.getAssignment({\r\n        'userID': this.state.userid\r\n    }).then(\r\n        (response) => {\r\n            console.log('getAssignment: success');\r\n            console.log(JSON.stringify(response));\r\n            // This object will include the assignment made and the status, which might tell you the experiment\r\n            // has not been started, etc.\r\n            // Note that if the experiment doesn't exist or hasn't been started, response.assignment is undefined, which is OK.\r\n            if (response.assignment === 'control') {\r\n              this.setState({\r\n                ctbt_state: 'block'  \r\n              });\r\n              console.log(\"control group\");\r\n                \r\n            }\r\n            else if (response.assignment === 'test') {\r\n                this.setState({\r\n                  ctbt_state: 'block'  \r\n                });\r\n                console.log(\"test group\");\r\n                WASABI.postImpression({\r\n                  'userID': this.state.userid\r\n                }).then(\r\n                    function(response) {\r\n                        console.log('postImpression: success');\r\n                        if (response) {\r\n                            console.log(JSON.stringify(response));\r\n                        }\r\n                    },\r\n                    function(error) {\r\n                        console.log('postImpression: error');\r\n                        console.dir(error);\r\n                    }\r\n                );\r\n            } else {\r\n              this.setState({\r\n                ctbt_state: 'none'  \r\n              });\r\n              console.log(\"no assignment\");\r\n            }\r\n            // else the user got the Control bucket, and we don't do anything.\r\n        },\r\n        (error) => {\r\n            console.log('getAssignment: error');\r\n            console.dir(error);\r\n            this.setState({\r\n              ctbt_state: 'none'  \r\n            });\r\n        }\r\n    );\r\n  }\r\n  handleCheckboxChange = () => {\r\n      WASABI.postAction(\r\n          'ClickedOnContribute',\r\n          null /* No extra action info */,\r\n          {\r\n              'userID': this.state.userid\r\n          }\r\n      ).then(\r\n          function (response) {\r\n              console.log('postAction: success');\r\n              if (response) {\r\n                  console.log(JSON.stringify(response));\r\n              }\r\n          },\r\n          function (error) {\r\n              console.log('postAction: error');\r\n              console.dir(error);\r\n          }\r\n      );\r\n\r\n\r\n    this.setState(prevState => ({\r\n      isChecked: !prevState.isChecked\r\n    }));\r\n  };\r\n\r\n   render() {\r\n    const { isChecked } = this.state;\r\n    const { label } = this.props;\r\n\r\n     return (\r\n      <div>\r\n        <div id=\"ctbt\" style={{ display: `${this.state.ctbt_state}` }}>\r\n          <div className=\"rounded-box\">\r\n            <div className=\"icon-message-container\">\r\n              <img src=\"/images/Icon.png\" alt=\"Icon\" className=\"icon\" />\r\n              <p className=\"message\">\r\n                Thank you for your purchase. Your patronage helps us donate up to $1 to one of these charities.\r\n              </p>\r\n            </div>\r\n            <div className=\"charity-logos-container\">\r\n              \r\n                <div className={`charity-logo-container charity-logo-container`}>\r\n                  <img\r\n                    src={`/charitylogos/charity-logos.png`}\r\n                    alt={`Charity Logo`}\r\n                    className=\"charity-logo\"\r\n                    style={{\r\n                      width: logoWidth,\r\n                      height: logoHeight,\r\n                    }}\r\n                  />\r\n                </div>\r\n            \r\n            </div>\r\n          </div>\r\n          <br />\r\n          <label>\r\n            \r\n            {label}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContributionsWidget;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}